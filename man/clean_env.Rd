% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_env.R
\name{clean_env}
\alias{clean_env}
\title{Clean Global Environment with Exceptions}
\usage{
clean_env(keep_types = NULL, keep_objects = NULL)
}
\arguments{
\item{keep_types}{A vector of classes. Objects in the global environment
of these classes will not be removed. Default is NULL.}

\item{keep_objects}{A vector of character strings. Objects in the global
environment with these names will not be removed. Default is NULL.}
}
\value{
NULL. This function is called for its side effect of cleaning
the global environment.
}
\description{
The \code{clean_env} function is designed to clean the global
environment of all objects except those specified by type or by name.
}
\details{
This function gets all objects in the global environment, and
then removes objects based on the \code{keep_types} and \code{keep_objects} parameters.
Any remaining objects are removed from the global environment.
}
\examples{
\dontrun{
# Generate some objects
a <- 1
b <- "hello"
c <- list(1, 2, 3)

# Clean the environment but keep lists and the object named 'a'
clean_env(keep_types = "list", keep_objects = "a")
}
}
\references{
Add any relevant references here.
}
